import Head from "next/head";
import { useState } from "react";
import { useRouter } from "next/router";
import Link from "next/link";
import Cookies from 'js-cookie';

export default function Login() {
    const [formData, setFormData] = useState({ email: "", password: "" });
    const [errorMessage, setErrorMessage] = useState("");
    const router = useRouter();

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData((prevData) => ({
            ...prevData,
            [name]: value,
        }));
    };

    const handleSubmit = async (event) => {
        event.preventDefault();
        setErrorMessage("");

        try {
            const response = await fetch('/api/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData),
            });

            if (response.ok) {
                const data = await response.json();
                const { jwt, username, id } = data.data;

                // Store JWT in cookies
                Cookies.set('jwt', jwt, { expires: 7 }); // JWT expires in 7 days

                // Store username in localStorage
                localStorage.setItem('username', username);
                localStorage.setItem('id', id);

                // Redirect to the profile page
                router.push(`/profile/${username}`);
            } else {
                // Handle errors
                const data = await response.json();
                setErrorMessage(data.message || "Login failed");
            }
        } catch (error) {
            console.log(error.message);
            setErrorMessage("An error occurred during login");
        }
    };

    return (
        <>
            <Head>
                <title>Login</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            
            <div className="flex w-full lg:h-screen flex-col lg:flex-row">
                {/* Left Side - Logo */}
                <div className="md:flex md:flex-1 items-center justify-center bg-black">
                    <img src="/io.png" alt="Logo" className="lg:w-1/2 w-1/4 rounded-[80px] mt-20 mx-auto h-auto"/>
                </div>

                {/* Right Side - Form */}
                <div className="flex-1 flex items-center justify-center bg-black">
                    <div className="w-full max-w-md p-6 shadow-md">
                        <h2 className="text-2xl font-semibold mb-6 text-white">Login</h2>
                        <form onSubmit={handleSubmit}>
                            <div className="mb-4">
                                <label htmlFor="email" className="block text-white font-medium mb-2">Email</label>
                                <input 
                                    type="email" 
                                    name="email" 
                                    id="email" 
                                    className="input input-bordered rounded-full w-full" 
                                    placeholder="Enter your email"
                                    value={formData.email}
                                    onChange={handleInputChange}
                                />
                            </div>
                            <div className="mb-6">
                                <label htmlFor="password" className="block text-white font-medium mb-2">Password</label>
                                <input 
                                    type="password"
                                    name="password"
                                    id="password"
                                    className="input input-bordered rounded-full w-full"
                                    placeholder="Enter your password"
                                    value={formData.password}
                                    onChange={handleInputChange}
                                />
                            </div>
                            {errorMessage && <p className="text-red-500 text-center my-2">{errorMessage}</p>}
                            <div className="flex items-center justify-between">
                                <button type="submit" className="btn rounded-full w-full bg-gradient-to-r from-pink-500 to-yellow-500 text-white hover:from-green-500 hover:to-sky-500">Login</button>
                            </div>
                            <div className="flex items-center justify-center pt-2">
                                <span className="text-white">Don't have an account? <Link href={"/register"} className="text-extrabold bg-gradient-to-r from-pink-500 to-yellow-500 inline-block text-transparent bg-clip-text hover:from-green-500 hover:to-sky-500">Register Here</Link> </span>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </>
    );
}
